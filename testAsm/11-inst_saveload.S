.org 0x0
.set noat
.set noreorder
.set nomacro
.global _start
_start:
    # test sb/lb/lbu
    ori $3, $0, 0xeeff  # $3 = 0x0000eeff
    sb $3, 0x3($0)      # [0x3] = 0xff

    srl $3, $3, 8     # >> 8, $3 = 0x000000ee
    sb $3, 0x2($0)      # [0x2] = 0xee

    ori $3, $0, 0xccdd  # $3 = 0x0000ccdd
    sb $3, 0x1($0)      # [0x1] = 0xdd

    srl $3, $3, 8       # >> 8, $3 = 0x000000cc
    sb $3, 0x0($0)      # [0x0] = 0xcc

    lb $1, 0x3($0)      # $1 = 0xffffffff
    lbu $1, 0x2($0)     # $1 = 0x000000ee

    # test sh/lh/lhu
    ori $3, $0, 0xaabb  # $3 = 0x0000aabb
    sh $3, 0x4($0)      # [0x4] = 0xaa, [0x5] = 0xbb

    lhu $1, 0x4($0)     # $1 = 0x0000aabb
    lh $1, 0x4($0)      # $1 = 0xffffaabb

    ori $3, $0, 0x8899  # $3 = 0x00008899
    sh $3, 0x6($0)      # [0x6] = 0x88, [0x7] = 0x99

    lh $1, 0x6($0)      # 加载 0x6 处的半字并作符号扩展，$1 = 0xffff8899
    lhu $1, 0x6($0)     # 加载 0x6 处的半字并作无符号扩展，$1 = 0x00008899

    # test sw/lw/lwl/lwr
    # 此时 RAM 的内容如下：
    # [0x0] = 0xcc, [0x1] = 0xdd
    # [0x2] = 0xee, [0x3] = 0xff
    # [0x4] = 0xaa, [0x5] = 0xbb
    # [0x6] = 0x88, [0x7] = 0x99

    ori $3, $0, 0x4455
    sll $3, $3, 0x10
    ori $3, $3, 0x6677  # $3 = 0x44556677
    sw  $3, 0x8($0)     # 向 RAM 地址 0x8 处存储 0x44556677
                        # [0x8] = 0x44, [0x9] = 0x55
                        # [0xa] = 0x66, [0xb] = 0x77

    lw $1, 0x8($0)      # 加载 0x8 处的字，$1 = 0x44556677

    lwl $1, 0x5($0)     # 非对齐加载指令 lwl，$1 = 0xbb889977
    lwr $1, 0x8($0)     # 非对齐加载指令 lwr，$1 = 0xbb889944

    nop

    # test swl/swr
    swr $1, 0x2($0)     # 非对齐存储
                        # [0x0] = 0x88, [0x1] = 0x99
                        # [0x2] = 0x44, [0x3] = 0xff

    swl $1, 0x7($0)     # 非对齐存储
                        # [0x4] = 0xaa, [0x5] = 0xbb
                        # [0x6] = 0x88, [0x7] = 0xbb

    lw $1, 0x0($0)      # 加载 RAM 地址 0x0 处的字， $1 = 0x889944ff
                        # 验证 swr 指令的执行效果
    
    lw $1, 0x4($0)      # 加载 RAM 地址 0x4 处的字， $1 = 0xaabb8844
                        # 验证 swl 指令的执行效果

_loop:
    j _loop
    nop
